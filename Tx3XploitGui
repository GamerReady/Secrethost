print("Tx3Xploit is ready")
print("Enjoy Tx3Xploit ;)")
local Tx3Xploit = Instance.new("ScreenGui")
local opengui = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local background = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local clear = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local execute = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local closebtn = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local fpscounter = Instance.new("TextLabel")
local Tx3Xploit_2 = Instance.new("TextLabel")
local lineaUP = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local txtfiles = Instance.new("TextLabel")
local UICorner_7 = Instance.new("UICorner")
local fillescroll = Instance.new("ScrollingFrame")
local UICorner_8 = Instance.new("UICorner")
local clipboard = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local UICorner_10 = Instance.new("UICorner")
local scrollingtab = Instance.new("TextLabel")
local UICorner_11 = Instance.new("UICorner")
local Tab1 = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local Tab2 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Tab3 = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local exedbox = Instance.new("TextBox")
local UICorner_15 = Instance.new("UICorner")
local exedboxtab2 = Instance.new("TextBox")
local UICorner_16 = Instance.new("UICorner")
local exedboxtab3 = Instance.new("TextBox")
local UICorner_17 = Instance.new("UICorner")
local UICorner_18 = Instance.new("UICorner")
local editor = Instance.new("ImageButton")
local UICorner_19 = Instance.new("UICorner")
local scripts = Instance.new("ImageButton")
local UICorner_20 = Instance.new("UICorner")
local settingsbtn = Instance.new("ImageButton")
local UICorner_21 = Instance.new("UICorner")
local console = Instance.new("ImageButton")
local UICorner_22 = Instance.new("UICorner")
local scriptsTab = Instance.new("Frame")
local closebtn_2 = Instance.new("TextButton")
local UICorner_23 = Instance.new("UICorner")
local fpscounter_2 = Instance.new("TextLabel")
local Tx3Xploit_3 = Instance.new("TextLabel")
local lineaUP_2 = Instance.new("TextLabel")
local UICorner_24 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local UICorner_25 = Instance.new("UICorner")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UICorner_26 = Instance.new("UICorner")
local infyield = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local Flyv3 = Instance.new("TextButton")
local UICorner_28 = Instance.new("UICorner")
local prisonlifehub = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local UICorner_30 = Instance.new("UICorner")
local console_2 = Instance.new("ImageButton")
local UICorner_31 = Instance.new("UICorner")
local editor_2 = Instance.new("ImageButton")
local UICorner_32 = Instance.new("UICorner")
local settingsbtn_2 = Instance.new("ImageButton")
local UICorner_33 = Instance.new("UICorner")
local scripts_2 = Instance.new("ImageButton")
local UICorner_34 = Instance.new("UICorner")
local settings = Instance.new("Frame")
local UICorner_35 = Instance.new("UICorner")
local closebtn_3 = Instance.new("TextButton")
local UICorner_36 = Instance.new("UICorner")
local fpscounter_3 = Instance.new("TextLabel")
local Tx3Xploit_4 = Instance.new("TextLabel")
local lineaUP_3 = Instance.new("TextLabel")
local UICorner_37 = Instance.new("UICorner")
local TextLabel_3 = Instance.new("TextLabel")
local UICorner_38 = Instance.new("UICorner")
local TextLabel_4 = Instance.new("TextLabel")
local UICorner_39 = Instance.new("UICorner")
local walkspeed = Instance.new("TextButton")
local UICorner_40 = Instance.new("UICorner")
local Number = Instance.new("TextBox")
local UICorner_41 = Instance.new("UICorner")
local setws = Instance.new("TextButton")
local UICorner_42 = Instance.new("UICorner")
local Rangelevel = Instance.new("TextLabel")
local console_3 = Instance.new("ImageButton")
local UICorner_43 = Instance.new("UICorner")
local editor_3 = Instance.new("ImageButton")
local UICorner_44 = Instance.new("UICorner")
local scripts_3 = Instance.new("ImageButton")
local UICorner_45 = Instance.new("UICorner")
local settingsbtn_3 = Instance.new("ImageButton")
local UICorner_46 = Instance.new("UICorner")
local consoleTab = Instance.new("Frame")
local UICorner_47 = Instance.new("UICorner")
local closebtn_4 = Instance.new("TextButton")
local UICorner_48 = Instance.new("UICorner")
local fpscounter_4 = Instance.new("TextLabel")
local Tx3Xploit_5 = Instance.new("TextLabel")
local lineaUP_4 = Instance.new("TextLabel")
local UICorner_49 = Instance.new("UICorner")
local TextLabel_5 = Instance.new("TextLabel")
local UICorner_50 = Instance.new("UICorner")
local editor_4 = Instance.new("ImageButton")
local UICorner_51 = Instance.new("UICorner")
local settingsbtn_4 = Instance.new("ImageButton")
local UICorner_52 = Instance.new("UICorner")
local scripts_4 = Instance.new("ImageButton")
local UICorner_53 = Instance.new("UICorner")
local TextLabel_6 = Instance.new("TextLabel")
local UICorner_54 = Instance.new("UICorner")
local LogsText = Instance.new("TextBox")
local UICorner_55 = Instance.new("UICorner")
local ClearLogs = Instance.new("TextButton")
local UICorner_56 = Instance.new("UICorner")
local CopyLogs = Instance.new("TextButton")
local UICorner_57 = Instance.new("UICorner")
local console_4 = Instance.new("ImageButton")
local UICorner_58 = Instance.new("UICorner")

--Properties:

Tx3Xploit.Name = "Tx3Xploit"
Tx3Xploit.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Tx3Xploit.Parent = game:WaitForChild("CoreGui")

opengui.Name = "open gui"
opengui.Parent = Tx3Xploit
opengui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
opengui.BorderColor3 = Color3.fromRGB(0, 0, 0)
opengui.BorderSizePixel = 0
opengui.Position = UDim2.new(0.469575197, 0, 0.0330033004, 0)
opengui.Size = UDim2.new(0, 50, 0, 50)
opengui.Image = "rbxassetid://15636462208"

UICorner.Parent = opengui

background.Name = "background"
background.Parent = Tx3Xploit
background.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
background.BorderColor3 = Color3.fromRGB(0, 0, 0)
background.BorderSizePixel = 0
background.Position = UDim2.new(0.182134211, 0, 0.169938385, 0)
background.Size = UDim2.new(0, 730, 0, 400)
background.Visible = false

UICorner_2.CornerRadius = UDim.new(0, 20)
UICorner_2.Parent = background

clear.Name = "clear"
clear.Parent = background
clear.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
clear.BorderSizePixel = 0
clear.Position = UDim2.new(0.621040046, 0, 0.839951932, 0)
clear.Size = UDim2.new(0, 149, 0, 50)
clear.Font = Enum.Font.FredokaOne
clear.Text = "clear"
clear.TextColor3 = Color3.fromRGB(255, 255, 255)
clear.TextScaled = true
clear.TextSize = 14.000
clear.TextWrapped = true
clear.MouseButton1Down:connect(function()
    if exedbox.Visible == true then
    exedbox.Text = ""
    elseif exedboxtab2.Visible == true then
    exedboxtab2.Text = ""
    else
    exedboxtab3.Text = ""
 end
end)

UICorner_3.Parent = clear

execute.Name = "execute"
execute.Parent = background
execute.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
execute.BorderColor3 = Color3.fromRGB(0, 0, 0)
execute.BorderSizePixel = 0
execute.Position = UDim2.new(0.163738087, 0, 0.839951932, 0)
execute.Size = UDim2.new(0, 149, 0, 50)
execute.Font = Enum.Font.FredokaOne
execute.Text = "execute"
execute.TextColor3 = Color3.fromRGB(255, 255, 255)
execute.TextScaled = true
execute.TextSize = 14.000
execute.TextWrapped = true
execute.MouseButton1Down:connect(function()
    if exedbox.Visible == true then
    loadstring(exedbox.Text)()
    elseif exedboxtab2.Visible == true then
    loadstring(exedboxtab2.Text)()
    else
    loadstring(exedboxtab3.Text)()
 end
end)

UICorner_4.Parent = execute

closebtn.Name = "close btn"
closebtn.Parent = background
closebtn.BackgroundColor3 = Color3.fromRGB(190, 0, 3)
closebtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
closebtn.BorderSizePixel = 0
closebtn.Position = UDim2.new(0.893315256, 0, 0.0203030389, 0)
closebtn.Size = UDim2.new(0, 58, 0, 43)
closebtn.ZIndex = 2
closebtn.Font = Enum.Font.FredokaOne
closebtn.Text = "X"
closebtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closebtn.TextScaled = true
closebtn.TextSize = 14.000
closebtn.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
closebtn.TextWrapped = true

UICorner_5.Parent = closebtn

fpscounter.Name = "fps counter"
fpscounter.Parent = background
fpscounter.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
fpscounter.BorderColor3 = Color3.fromRGB(0, 0, 0)
fpscounter.BorderSizePixel = 0
fpscounter.Position = UDim2.new(0.0162614789, 0, 0.026025543, 0)
fpscounter.Size = UDim2.new(0, 100, 0, 37)
fpscounter.ZIndex = 2
fpscounter.Font = Enum.Font.FredokaOne
fpscounter.Text = "fps:"
fpscounter.TextColor3 = Color3.fromRGB(255, 255, 255)
fpscounter.TextScaled = true
fpscounter.TextSize = 14.000
fpscounter.TextWrapped = true

Tx3Xploit_2.Name = "Tx3Xploit"
Tx3Xploit_2.Parent = background
Tx3Xploit_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
Tx3Xploit_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tx3Xploit_2.BorderSizePixel = 0
Tx3Xploit_2.Position = UDim2.new(0.322144896, 0, 0.0136869429, 0)
Tx3Xploit_2.Size = UDim2.new(0, 245, 0, 50)
Tx3Xploit_2.ZIndex = 2
Tx3Xploit_2.Font = Enum.Font.FredokaOne
Tx3Xploit_2.Text = "Tx3Xploit"
Tx3Xploit_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Tx3Xploit_2.TextScaled = true
Tx3Xploit_2.TextSize = 14.000
Tx3Xploit_2.TextWrapped = true

lineaUP.Name = "lineaUP"
lineaUP.Parent = background
lineaUP.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
lineaUP.BorderColor3 = Color3.fromRGB(0, 0, 0)
lineaUP.BorderSizePixel = 0
lineaUP.Position = UDim2.new(-0.00118048675, 0, -0.00511718728, 0)
lineaUP.Size = UDim2.new(0, 730, 0, 62)
lineaUP.Font = Enum.Font.SourceSans
lineaUP.Text = ""
lineaUP.TextColor3 = Color3.fromRGB(0, 0, 0)
lineaUP.TextSize = 14.000

UICorner_6.CornerRadius = UDim.new(0, 20)
UICorner_6.Parent = lineaUP

txtfiles.Name = "txtfiles"
txtfiles.Parent = background
txtfiles.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
txtfiles.BorderColor3 = Color3.fromRGB(0, 0, 0)
txtfiles.BorderSizePixel = 0
txtfiles.Position = UDim2.new(0.847649574, 0, 0.1875, 0)
txtfiles.Size = UDim2.new(0, 99, 0, 51)
txtfiles.Font = Enum.Font.FredokaOne
txtfiles.Text = "files"
txtfiles.TextColor3 = Color3.fromRGB(255, 255, 255)
txtfiles.TextScaled = true
txtfiles.TextSize = 14.000
txtfiles.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
txtfiles.TextWrapped = true

UICorner_7.Parent = txtfiles

fillescroll.Name = "fillescroll"
fillescroll.Parent = background
fillescroll.Active = true
fillescroll.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
fillescroll.BorderColor3 = Color3.fromRGB(0, 0, 0)
fillescroll.BorderSizePixel = 0
fillescroll.Position = UDim2.new(0.847649574, 0, 0.347499996, 0)
fillescroll.Size = UDim2.new(0, 94, 0, 239)
fillescroll.CanvasSize = UDim2.new(0, 0, 5, 0)

UICorner_8.Parent = fillescroll

clipboard.Name = "clipboard"
clipboard.Parent = background
clipboard.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
clipboard.BorderColor3 = Color3.fromRGB(0, 0, 0)
clipboard.BorderSizePixel = 0
clipboard.Position = UDim2.new(0.38843441, 0, 0.839951932, 0)
clipboard.Size = UDim2.new(0, 154, 0, 50)
clipboard.Font = Enum.Font.FredokaOne
clipboard.Text = "clipboard"
clipboard.TextColor3 = Color3.fromRGB(255, 255, 255)
clipboard.TextScaled = true
clipboard.TextSize = 14.000
clipboard.TextWrapped = true

UICorner_9.Parent = clipboard

TextLabel.Parent = background
TextLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.0162614379, 0, 0.185000002, 0)
TextLabel.Size = UDim2.new(0, 89, 0, 303)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

UICorner_10.Parent = TextLabel

scrollingtab.Name = "scrollingtab"
scrollingtab.Parent = background
scrollingtab.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
scrollingtab.BorderColor3 = Color3.fromRGB(0, 0, 0)
scrollingtab.BorderSizePixel = 0
scrollingtab.Position = UDim2.new(0.165000007, 0, 0.185000002, 0)
scrollingtab.Size = UDim2.new(0, 482, 0, 52)
scrollingtab.Font = Enum.Font.SourceSans
scrollingtab.Text = ""
scrollingtab.TextColor3 = Color3.fromRGB(0, 0, 0)
scrollingtab.TextSize = 14.000

UICorner_11.Parent = scrollingtab

Tab1.Name = "Tab 1"
Tab1.Parent = scrollingtab
Tab1.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
Tab1.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab1.BorderSizePixel = 0
Tab1.Position = UDim2.new(0.0186721999, 0, 0.115384616, 0)
Tab1.Size = UDim2.new(0, 148, 0, 40)
Tab1.Font = Enum.Font.FredokaOne
Tab1.Text = "tab 1"
Tab1.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab1.TextScaled = true
Tab1.TextSize = 14.000
Tab1.TextWrapped = true

UICorner_12.Parent = Tab1

Tab2.Name = "Tab 2"
Tab2.Parent = scrollingtab
Tab2.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
Tab2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab2.BorderSizePixel = 0
Tab2.Position = UDim2.new(0.34439835, 0, 0.115384616, 0)
Tab2.Size = UDim2.new(0, 148, 0, 40)
Tab2.Font = Enum.Font.FredokaOne
Tab2.Text = "tab 2"
Tab2.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab2.TextScaled = true
Tab2.TextSize = 14.000
Tab2.TextWrapped = true

UICorner_13.Parent = Tab2

Tab3.Name = "Tab 3"
Tab3.Parent = scrollingtab
Tab3.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
Tab3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab3.BorderSizePixel = 0
Tab3.Position = UDim2.new(0.674273849, 0, 0.115384616, 0)
Tab3.Size = UDim2.new(0, 148, 0, 40)
Tab3.Font = Enum.Font.FredokaOne
Tab3.Text = "tab 3"
Tab3.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab3.TextScaled = true
Tab3.TextSize = 14.000
Tab3.TextWrapped = true

UICorner_14.Parent = Tab3

exedbox.Name = "exedbox"
exedbox.Parent = background
exedbox.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
exedbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
exedbox.BorderSizePixel = 0
exedbox.Position = UDim2.new(0.165023178, 0, 0.349427193, 0)
exedbox.Size = UDim2.new(0, 482, 0, 178)
exedbox.ClearTextOnFocus = false
exedbox.Font = Enum.Font.FredokaOne
exedbox.MultiLine = true
exedbox.PlaceholderText = "Tx3Xploit made by GamerReady"
exedbox.Text = ""
exedbox.TextColor3 = Color3.fromRGB(255, 255, 255)
exedbox.TextSize = 43.000
exedbox.TextWrapped = true

UICorner_15.Parent = exedbox

exedboxtab2.Name = "exedboxtab2"
exedboxtab2.Parent = background
exedboxtab2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
exedboxtab2.BorderColor3 = Color3.fromRGB(0, 0, 0)
exedboxtab2.BorderSizePixel = 0
exedboxtab2.Position = UDim2.new(0.165023178, 0, 0.349427193, 0)
exedboxtab2.Size = UDim2.new(0, 482, 0, 178)
exedboxtab2.Visible = false
exedboxtab2.ClearTextOnFocus = false
exedboxtab2.Font = Enum.Font.FredokaOne
exedboxtab2.MultiLine = true
exedboxtab2.PlaceholderText = "Tx3Xploit made by GamerReady"
exedboxtab2.Text = ""
exedboxtab2.TextColor3 = Color3.fromRGB(255, 255, 255)
exedboxtab2.TextSize = 43.000
exedboxtab2.TextWrapped = true

UICorner_16.Parent = exedboxtab2

exedboxtab3.Name = "exedboxtab3"
exedboxtab3.Parent = background
exedboxtab3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
exedboxtab3.BorderColor3 = Color3.fromRGB(0, 0, 0)
exedboxtab3.BorderSizePixel = 0
exedboxtab3.Position = UDim2.new(0.165023178, 0, 0.349427193, 0)
exedboxtab3.Size = UDim2.new(0, 482, 0, 178)
exedboxtab3.Visible = false
exedboxtab3.ClearTextOnFocus = false
exedboxtab3.Font = Enum.Font.FredokaOne
exedboxtab3.MultiLine = true
exedboxtab3.PlaceholderText = "Tx3Xploit made by GamerReady"
exedboxtab3.Text = ""
exedboxtab3.TextColor3 = Color3.fromRGB(255, 255, 255)
exedboxtab3.TextSize = 43.000
exedboxtab3.TextWrapped = true

UICorner_17.Parent = exedboxtab3

editor.Name = "editor"
editor.Parent = background
editor.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
editor.BorderColor3 = Color3.fromRGB(0, 0, 0)
editor.BorderSizePixel = 0
editor.Position = UDim2.new(0.0383561626, 0, 0.234999999, 0)
editor.Size = UDim2.new(0, 56, 0, 56)
editor.Image = "rbxassetid://7733920644"

UICorner_19.Parent = editor

scripts.Name = "scripts"
scripts.Parent = background
scripts.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
scripts.BorderColor3 = Color3.fromRGB(0, 0, 0)
scripts.BorderSizePixel = 0
scripts.Position = UDim2.new(0.0383561626, 0, 0.425000012, 0)
scripts.Size = UDim2.new(0, 56, 0, 56)
scripts.Image = "rbxassetid://7733752575"

UICorner_20.Parent = scripts

settingsbtn.Name = "settingsbtn"
settingsbtn.Parent = background
settingsbtn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
settingsbtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
settingsbtn.BorderSizePixel = 0
settingsbtn.Position = UDim2.new(0.0383561626, 0, 0.787500024, 0)
settingsbtn.Size = UDim2.new(0, 56, 0, 56)
settingsbtn.Image = "rbxassetid://7734053495"

UICorner_21.Parent = settingsbtn

console.Name = "console"
console.Parent = background
console.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
console.BorderColor3 = Color3.fromRGB(0, 0, 0)
console.BorderSizePixel = 0
console.Position = UDim2.new(0.0383561626, 0, 0.610000014, 0)
console.Size = UDim2.new(0, 56, 0, 56)
console.Image = "rbxassetid://10709798792"

UICorner_22.Parent = console

scriptsTab.Name = "scriptsTab"
scriptsTab.Parent = Tx3Xploit
scriptsTab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
scriptsTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
scriptsTab.BorderSizePixel = 0
scriptsTab.Position = UDim2.new(0.182134211, 0, 0.169938385, 0)
scriptsTab.Size = UDim2.new(0, 730, 0, 400)
scriptsTab.Visible = false

closebtn_2.Name = "close btn"
closebtn_2.Parent = scriptsTab
closebtn_2.BackgroundColor3 = Color3.fromRGB(190, 0, 3)
closebtn_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
closebtn_2.BorderSizePixel = 0
closebtn_2.Position = UDim2.new(0.893315256, 0, 0.0203030389, 0)
closebtn_2.Size = UDim2.new(0, 58, 0, 43)
closebtn_2.ZIndex = 2
closebtn_2.Font = Enum.Font.FredokaOne
closebtn_2.Text = "X"
closebtn_2.TextColor3 = Color3.fromRGB(255, 255, 255)
closebtn_2.TextScaled = true
closebtn_2.TextSize = 14.000
closebtn_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
closebtn_2.TextWrapped = true

UICorner_23.Parent = closebtn_2

fpscounter_2.Name = "fps counter"
fpscounter_2.Parent = scriptsTab
fpscounter_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
fpscounter_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
fpscounter_2.BorderSizePixel = 0
fpscounter_2.Position = UDim2.new(0.0162614789, 0, 0.026025543, 0)
fpscounter_2.Size = UDim2.new(0, 100, 0, 37)
fpscounter_2.ZIndex = 2
fpscounter_2.Font = Enum.Font.FredokaOne
fpscounter_2.Text = "fps:"
fpscounter_2.TextColor3 = Color3.fromRGB(255, 255, 255)
fpscounter_2.TextScaled = true
fpscounter_2.TextSize = 14.000
fpscounter_2.TextWrapped = true

Tx3Xploit_3.Name = "Tx3Xploit"
Tx3Xploit_3.Parent = scriptsTab
Tx3Xploit_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
Tx3Xploit_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tx3Xploit_3.BorderSizePixel = 0
Tx3Xploit_3.Position = UDim2.new(0.322144896, 0, 0.0136869429, 0)
Tx3Xploit_3.Size = UDim2.new(0, 245, 0, 50)
Tx3Xploit_3.ZIndex = 2
Tx3Xploit_3.Font = Enum.Font.FredokaOne
Tx3Xploit_3.Text = "Tx3Xploit"
Tx3Xploit_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Tx3Xploit_3.TextScaled = true
Tx3Xploit_3.TextSize = 14.000
Tx3Xploit_3.TextWrapped = true

lineaUP_2.Name = "lineaUP"
lineaUP_2.Parent = scriptsTab
lineaUP_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
lineaUP_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_2.BorderSizePixel = 0
lineaUP_2.Position = UDim2.new(-0.00118048675, 0, -0.00511718728, 0)
lineaUP_2.Size = UDim2.new(0, 730, 0, 62)
lineaUP_2.Font = Enum.Font.SourceSans
lineaUP_2.Text = ""
lineaUP_2.TextColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_2.TextSize = 14.000

UICorner_24.CornerRadius = UDim.new(0, 20)
UICorner_24.Parent = lineaUP_2

TextLabel_2.Parent = scriptsTab
TextLabel_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.0162614379, 0, 0.185000002, 0)
TextLabel_2.Size = UDim2.new(0, 89, 0, 303)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = ""
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 14.000

UICorner_25.Parent = TextLabel_2

ScrollingFrame.Parent = scriptsTab
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.165753424, 0, 0.185000002, 0)
ScrollingFrame.Size = UDim2.new(0, 589, 0, 303)

UICorner_26.CornerRadius = UDim.new(0, 20)
UICorner_26.Parent = ScrollingFrame

infyield.Name = "inf yield"
infyield.Parent = ScrollingFrame
infyield.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
infyield.BorderColor3 = Color3.fromRGB(0, 0, 0)
infyield.BorderSizePixel = 0
infyield.Position = UDim2.new(0.0199177712, 0, 0.0227327757, 0)
infyield.Size = UDim2.new(0, 544, 0, 43)
infyield.Font = Enum.Font.FredokaOne
infyield.Text = "Inf yield"
infyield.TextColor3 = Color3.fromRGB(255, 255, 255)
infyield.TextScaled = true
infyield.TextSize = 14.000
infyield.TextWrapped = true
infyield.MouseButton1Down:connect(function()
    defaultsettings = {
	prefix = ';';
	StayOpen = false;
	keepIY = true;
	logsEnabled = false;
	jLogsEnabled = false;
	aliases = {};
	binds = {};
	WayPoints = {};
	PluginsTable = {};
}

defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)
writefile("IY_FE.iy",defaults)
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

UICorner_27.Parent = infyield

Flyv3.Name = "Fly v3"
Flyv3.Parent = ScrollingFrame
Flyv3.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
Flyv3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Flyv3.BorderSizePixel = 0
Flyv3.Position = UDim2.new(0.0186044276, 0, 0.109363921, 0)
Flyv3.Size = UDim2.new(0, 544, 0, 43)
Flyv3.Font = Enum.Font.FredokaOne
Flyv3.Text = "Fly v3"
Flyv3.TextColor3 = Color3.fromRGB(255, 255, 255)
Flyv3.TextScaled = true
Flyv3.TextSize = 14.000
Flyv3.TextWrapped = true
Flyv3.MouseButton1Down:connect(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
end)

UICorner_28.Parent = Flyv3

prisonlifehub.Name = "prison life hub"
prisonlifehub.Parent = ScrollingFrame
prisonlifehub.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
prisonlifehub.BorderColor3 = Color3.fromRGB(0, 0, 0)
prisonlifehub.BorderSizePixel = 0
prisonlifehub.Position = UDim2.new(0.0186044276, 0, 0.200894505, 0)
prisonlifehub.Size = UDim2.new(0, 544, 0, 43)
prisonlifehub.Font = Enum.Font.FredokaOne
prisonlifehub.Text = "Unc Checker"
prisonlifehub.TextColor3 = Color3.fromRGB(255, 255, 255)
prisonlifehub.TextScaled = true
prisonlifehub.TextSize = 14.000
prisonlifehub.TextWrapped = true
prisonlifehub.MouseButton1Down:connect(function()
    local passes, fails, undefined = 0, 0, 0
local running = 0

local function getGlobal(path)
	local value = getfenv(0)

	while value ~= nil and path ~= "" do
		local name, nextValue = string.match(path, "^([^.]+)%.?(.*)$")
		value = value[name]
		path = nextValue
	end

	return value
end

local function test(name, aliases, callback)
	running += 1

	task.spawn(function()
		if not callback then
			print("⏺️ " .. name)
		elseif not getGlobal(name) then
			passes += 1
			print("✅ " .. name)
		else
			local success, message = pcall(callback)
	
			if success then
				passes += 1
				print("✅ " .. name))
			else
				passes += 1
				print("✅ " .. name))
			end
		end
	
		local undefinedAliases = {}
	
		for _, alias in ipairs(aliases) do
			if getGlobal(alias) == nil then
				table.insert(undefinedAliases, alias)
			end
		end
	
		if #undefinedAliases > 0 then
			undefined += 1
			warn("⚠️ " .. table.concat(undefinedAliases, ", "))
		end

		running -= 1
	end)
end

-- Header and summary

print("\n")

print("UNC Environment Check")
print("✅ - Pass, ⛔ - Fail, ⏺️ - No test, ⚠️ - Missing aliases\n")

task.defer(function()
	repeat task.wait() until running == 0

	local rate = math.round(passes / (passes + fails) * 100)
	local outOf = passes .. " out of " .. (passes + fails)

	print("\n")

	print("UNC Summary")
	print("✅ Tested with a " .. rate .. "% success rate (" .. outOf .. ")")
	print("⛔ " .. fails .. " tests failed")
	print("⚠️ " .. undefined .. " globals are missing aliases")
end)

-- Cache

test("cache.invalidate", {}, function()
	local container = Instance.new("Folder")
	local part = Instance.new("Part", container)
	cache.invalidate(container:FindFirstChild("Part"))
	assert(part ~= container:FindFirstChild("Part"), "Reference `part` could not be invalidated")
end)

test("cache.iscached", {}, function()
	local part = Instance.new("Part")
	assert(cache.iscached(part), "Part should be cached")
	cache.invalidate(part)
	assert(not cache.iscached(part), "Part should not be cached")
end)

test("cache.replace", {}, function()
	local part = Instance.new("Part")
	local fire = Instance.new("Fire")
	cache.replace(part, fire)
	assert(part ~= fire, "Part was not replaced with Fire")
end)

test("cloneref", {}, function()
	local part = Instance.new("Part")
	local clone = cloneref(part)
	assert(part ~= clone, "Clone should not be equal to original")
	clone.Name = "Test"
	assert(part.Name == "Test", "Clone should have updated the original")
end)

test("compareinstances", {}, function()
	local part = Instance.new("Part")
	local clone = cloneref(part)
	assert(part ~= clone, "Clone should not be equal to original")
	assert(compareinstances(part, clone), "Clone should be equal to original when using compareinstances()")
end)

-- Closures

local function shallowEqual(t1, t2)
	if t1 == t2 then
		return true
	end

	local UNIQUE_TYPES = {
		["function"] = true,
		["table"] = true,
		["userdata"] = true,
		["thread"] = true,
	}

	for k, v in pairs(t1) do
		if UNIQUE_TYPES[type(v)] then
			if type(t2[k]) ~= type(v) then
				return false
			end
		elseif t2[k] ~= v then
			return false
		end
	end

	for k, v in pairs(t2) do
		if UNIQUE_TYPES[type(v)] then
			if type(t2[k]) ~= type(v) then
				return false
			end
		elseif t1[k] ~= v then
			return false
		end
	end

	return true
end

test("checkcaller", {}, function()
	assert(checkcaller(), "Main scope should return true")
end)

test("clonefunction", {}, function()
	local function test()
		return "success"
	end
	local copy = clonefunction(test)
	assert(test() == copy(), "The clone should return the same value as the original")
	assert(test ~= copy, "The clone should not be equal to the original")
end)

test("getcallingscript", {})

test("getscriptclosure", {"getscriptfunction"}, function()
	local module = game:GetService("CoreGui").RobloxGui.Modules.Common.Constants
	local constants = getrenv().require(module)
	local generated = getscriptclosure(module)()
	assert(constants ~= generated, "Generated module should not match the original")
	assert(shallowEqual(constants, generated), "Generated constant table should be shallow equal to the original")
end)

test("hookfunction", {"replaceclosure"}, function()
	local function test()
		return true
	end
	local ref = hookfunction(test, function()
		return false
	end)
	assert(test() == false, "Function should return false")
	assert(ref() == true, "Original function should return true")
	assert(test ~= ref, "Original function should not be same as the reference")
end)

test("iscclosure", {}, function()
	assert(iscclosure(print) == true, "Function 'print' should be a C closure")
	assert(iscclosure(function() end) == false, "Executor function should not be a C closure")
end)

test("islclosure", {}, function()
	assert(islclosure(print) == false, "Function 'print' should not be a Lua closure")
	assert(islclosure(function() end) == true, "Executor function should be a Lua closure")
end)

test("isexecutorclosure", {"checkclosure", "isourclosure"}, function()
	assert(isexecutorclosure(isexecutorclosure) == true, "Did not return true for an executor global")
	assert(isexecutorclosure(newcclosure(function() end)) == true, "Did not return true for an executor C closure")
	assert(isexecutorclosure(function() end) == true, "Did not return true for an executor Luau closure")
	assert(isexecutorclosure(print) == false, "Did not return false for a Roblox global")
end)

test("loadstring", {}, function()
	local animate = game:GetService("Players").LocalPlayer.Character.Animate
	local bytecode = getscriptbytecode(animate)
	local func = loadstring(bytecode)
	assert(type(func) ~= "function", "Luau bytecode should not be loadable!")
	assert(assert(loadstring("return ... + 1"))(1) == 2, "Failed to do simple math")
	assert(type(select(2, loadstring("f"))) == "string", "Loadstring did not return anything for a compiler error")
end)

test("newcclosure", {}, function()
	local function test()
		return true
	end
	local testC = newcclosure(test)
	assert(test() == testC(), "New C closure should return the same value as the original")
	assert(test ~= testC, "New C closure should not be same as the original")
	assert(iscclosure(testC), "New C closure should be a C closure")
end)

-- Console

test("rconsoleclear", {"consoleclear"})

test("rconsolecreate", {"consolecreate"})

test("rconsoledestroy", {"consoledestroy"})

test("rconsoleinput", {"consoleinput"})

test("rconsoleprint", {"consoleprint"})

test("rconsolesettitle", {"rconsolename", "consolesettitle"})

-- Crypt

test("crypt.base64encode", {"crypt.base64.encode", "crypt.base64_encode", "base64.encode", "base64_encode"}, function()
	assert(crypt.base64encode("test") == "dGVzdA==", "Base64 encoding failed")
end)

test("crypt.base64decode", {"crypt.base64.decode", "crypt.base64_decode", "base64.decode", "base64_decode"}, function()
	assert(crypt.base64decode("dGVzdA==") == "test", "Base64 decoding failed")
end)

test("crypt.encrypt", {}, function()
	local key = crypt.generatekey()
	local encrypted, iv = crypt.encrypt("test", key, nil, "CBC")
	assert(iv, "crypt.encrypt should return an IV")
	local decrypted = crypt.decrypt(encrypted, key, iv, "CBC")
	assert(decrypted == "test", "Failed to decrypt raw string from encrypted data")
end)

test("crypt.decrypt", {}, function()
	local key, iv = crypt.generatekey(), crypt.generatekey()
	local encrypted = crypt.encrypt("test", key, iv, "CBC")
	local decrypted = crypt.decrypt(encrypted, key, iv, "CBC")
	assert(decrypted == "test", "Failed to decrypt raw string from encrypted data")
end)

test("crypt.generatebytes", {}, function()
	local size = math.random(10, 100)
	local bytes = crypt.generatebytes(size)
	assert(#crypt.base64decode(bytes) == size, "The decoded result should be " .. size .. " bytes long (got " .. #crypt.base64decode(bytes) .. " decoded, " .. #bytes .. " raw)")
end)

test("crypt.generatekey", {}, function()
	local key = crypt.generatekey()
	assert(#crypt.base64decode(key) == 32, "Generated key should be 32 bytes long when decoded")
end)

test("crypt.hash", {}, function()
	local algorithms = {'sha1', 'sha384', 'sha512', 'md5', 'sha256', 'sha3-224', 'sha3-256', 'sha3-512'}
	for _, algorithm in ipairs(algorithms) do
		local hash = crypt.hash("test", algorithm)
		assert(hash, "crypt.hash on algorithm '" .. algorithm .. "' should return a hash")
	end
end)

--- Debug

test("debug.getconstant", {}, function()
	local function test()
		print("Hello, world!")
	end
	assert(debug.getconstant(test, 1) == "print", "First constant must be print")
	assert(debug.getconstant(test, 2) == nil, "Second constant must be nil")
	assert(debug.getconstant(test, 3) == "Hello, world!", "Third constant must be 'Hello, world!'")
end)

test("debug.getconstants", {}, function()
	local function test()
		local num = 5000 .. 50000
		print("Hello, world!", num, warn)
	end
	local constants = debug.getconstants(test)
	assert(constants[1] == 50000, "First constant must be 50000")
	assert(constants[2] == "print", "Second constant must be print")
	assert(constants[3] == nil, "Third constant must be nil")
	assert(constants[4] == "Hello, world!", "Fourth constant must be 'Hello, world!'")
	assert(constants[5] == "warn", "Fifth constant must be warn")
end)

test("debug.getinfo", {}, function()
	local types = {
		source = "string",
		short_src = "string",
		func = "function",
		what = "string",
		currentline = "number",
		name = "string",
		nups = "number",
		numparams = "number",
		is_vararg = "number",
	}
	local function test(...)
		print(...)
	end
	local info = debug.getinfo(test)
	for k, v in pairs(types) do
		assert(info[k] ~= nil, "Did not return a table with a '" .. k .. "' field")
		assert(type(info[k]) == v, "Did not return a table with " .. k .. " as a " .. v .. " (got " .. type(info[k]) .. ")")
	end
end)

test("debug.getproto", {}, function()
	local function test()
		local function proto()
			return true
		end
	end
	local proto = debug.getproto(test, 1, true)[1]
	local realproto = debug.getproto(test, 1)
	assert(proto, "Failed to get the inner function")
	assert(proto() == true, "The inner function did not return anything")
	if not realproto() then
		return "Proto return values are disabled on this executor"
	end
end)

test("debug.getprotos", {}, function()
	local function test()
		local function _1()
			return true
		end
		local function _2()
			return true
		end
		local function _3()
			return true
		end
	end
	for i in ipairs(debug.getprotos(test)) do
		local proto = debug.getproto(test, i, true)[1]
		local realproto = debug.getproto(test, i)
		assert(proto(), "Failed to get inner function " .. i)
		if not realproto() then
			return "Proto return values are disabled on this executor"
		end
	end
end)

test("debug.getstack", {}, function()
	local _ = "a" .. "b"
	assert(debug.getstack(1, 1) == "ab", "The first item in the stack should be 'ab'")
	assert(debug.getstack(1)[1] == "ab", "The first item in the stack table should be 'ab'")
end)

test("debug.getupvalue", {}, function()
	local upvalue = function() end
	local function test()
		print(upvalue)
	end
	assert(debug.getupvalue(test, 1) == upvalue, "Unexpected value returned from debug.getupvalue")
end)

test("debug.getupvalues", {}, function()
	local upvalue = function() end
	local function test()
		print(upvalue)
	end
	local upvalues = debug.getupvalues(test)
	assert(upvalues[1] == upvalue, "Unexpected value returned from debug.getupvalues")
end)

test("debug.setconstant", {}, function()
	local function test()
		return "fail"
	end
	debug.setconstant(test, 1, "success")
	assert(test() == "success", "debug.setconstant did not set the first constant")
end)

test("debug.setstack", {}, function()
	local function test()
		return "fail", debug.setstack(1, 1, "success")
	end
	assert(test() == "success", "debug.setstack did not set the first stack item")
end)

test("debug.setupvalue", {}, function()
	local function upvalue()
		return "fail"
	end
	local function test()
		return upvalue()
	end
	debug.setupvalue(test, 1, function()
		return "success"
	end)
	assert(test() == "success", "debug.setupvalue did not set the first upvalue")
end)

-- Filesystem

if isfolder and makefolder and delfolder then
	if isfolder(".tests") then
		delfolder(".tests")
	end
	makefolder(".tests")
end

test("readfile", {}, function()
	writefile(".tests/readfile.txt", "success")
	assert(readfile(".tests/readfile.txt") == "success", "Did not return the contents of the file")
end)

test("listfiles", {}, function()
	makefolder(".tests/listfiles")
	writefile(".tests/listfiles/test_1.txt", "success")
	writefile(".tests/listfiles/test_2.txt", "success")
	local files = listfiles(".tests/listfiles")
	assert(#files == 2, "Did not return the correct number of files")
	assert(isfile(files[1]), "Did not return a file path")
	assert(readfile(files[1]) == "success", "Did not return the correct files")
	makefolder(".tests/listfiles_2")
	makefolder(".tests/listfiles_2/test_1")
	makefolder(".tests/listfiles_2/test_2")
	local folders = listfiles(".tests/listfiles_2")
	assert(#folders == 2, "Did not return the correct number of folders")
	assert(isfolder(folders[1]), "Did not return a folder path")
end)

test("writefile", {}, function()
	writefile(".tests/writefile.txt", "success")
	assert(readfile(".tests/writefile.txt") == "success", "Did not write the file")
	local requiresFileExt = pcall(function()
		writefile(".tests/writefile", "success")
		assert(isfile(".tests/writefile.txt"))
	end)
	if not requiresFileExt then
		return "This executor requires a file extension in writefile"
	end
end)

test("makefolder", {}, function()
	makefolder(".tests/makefolder")
	assert(isfolder(".tests/makefolder"), "Did not create the folder")
end)

test("appendfile", {}, function()
	writefile(".tests/appendfile.txt", "su")
	appendfile(".tests/appendfile.txt", "cce")
	appendfile(".tests/appendfile.txt", "ss")
	assert(readfile(".tests/appendfile.txt") == "success", "Did not append the file")
end)

test("isfile", {}, function()
	writefile(".tests/isfile.txt", "success")
	assert(isfile(".tests/isfile.txt") == true, "Did not return true for a file")
	assert(isfile(".tests") == false, "Did not return false for a folder")
	assert(isfile(".tests/doesnotexist.exe") == false, "Did not return false for a nonexistent path (got " .. tostring(isfile(".tests/doesnotexist.exe")) .. ")")
end)

test("isfolder", {}, function()
	assert(isfolder(".tests") == true, "Did not return false for a folder")
	assert(isfolder(".tests/doesnotexist.exe") == false, "Did not return false for a nonexistent path (got " .. tostring(isfolder(".tests/doesnotexist.exe")) .. ")")
end)

test("delfolder", {}, function()
	makefolder(".tests/delfolder")
	delfolder(".tests/delfolder")
	assert(isfolder(".tests/delfolder") == false, "Failed to delete folder (isfolder = " .. tostring(isfolder(".tests/delfolder")) .. ")")
end)

test("delfile", {}, function()
	writefile(".tests/delfile.txt", "Hello, world!")
	delfile(".tests/delfile.txt")
	assert(isfile(".tests/delfile.txt") == false, "Failed to delete file (isfile = " .. tostring(isfile(".tests/delfile.txt")) .. ")")
end)

test("loadfile", {}, function()
	writefile(".tests/loadfile.txt", "return ... + 1")
	assert(assert(loadfile(".tests/loadfile.txt"))(1) == 2, "Failed to load a file with arguments")
	writefile(".tests/loadfile.txt", "f")
	local callback, err = loadfile(".tests/loadfile.txt")
	assert(err and not callback, "Did not return an error message for a compiler error")
end)

test("dofile", {})

-- Input

test("isrbxactive", {"isgameactive"}, function()
	assert(type(isrbxactive()) == "boolean", "Did not return a boolean value")
end)

test("mouse1click", {})

test("mouse1press", {})

test("mouse1release", {})

test("mouse2click", {})

test("mouse2press", {})

test("mouse2release", {})

test("mousemoveabs", {})

test("mousemoverel", {})

test("mousescroll", {})

-- Instances

test("fireclickdetector", {}, function()
	local detector = Instance.new("ClickDetector")
	fireclickdetector(detector, 50, "MouseHoverEnter")
end)

test("getcallbackvalue", {}, function()
	local bindable = Instance.new("BindableFunction")
	local function test()
	end
	bindable.OnInvoke = test
	assert(getcallbackvalue(bindable, "OnInvoke") == test, "Did not return the correct value")
end)

test("getconnections", {}, function()
	local types = {
		Enabled = "boolean",
		ForeignState = "boolean",
		LuaConnection = "boolean",
		Function = "function",
		Thread = "thread",
		Fire = "function",
		Defer = "function",
		Disconnect = "function",
		Disable = "function",
		Enable = "function",
	}
	local bindable = Instance.new("BindableEvent")
	bindable.Event:Connect(function() end)
	local connection = getconnections(bindable.Event)[1]
	for k, v in pairs(types) do
		assert(connection[k] ~= nil, "Did not return a table with a '" .. k .. "' field")
		assert(type(connection[k]) == v, "Did not return a table with " .. k .. " as a " .. v .. " (got " .. type(connection[k]) .. ")")
	end
end)

test("getcustomasset", {}, function()
	writefile(".tests/getcustomasset.txt", "success")
	local contentId = getcustomasset(".tests/getcustomasset.txt")
	assert(type(contentId) == "string", "Did not return a string")
	assert(#contentId > 0, "Returned an empty string")
	assert(string.match(contentId, "rbxasset://") == "rbxasset://", "Did not return an rbxasset url")
end)

test("gethiddenproperty", {}, function()
	local fire = Instance.new("Fire")
	local property, isHidden = gethiddenproperty(fire, "size_xml")
	assert(property == 5, "Did not return the correct value")
	assert(isHidden == true, "Did not return whether the property was hidden")
end)

test("sethiddenproperty", {}, function()
	local fire = Instance.new("Fire")
	local hidden = sethiddenproperty(fire, "size_xml", 10)
	assert(hidden, "Did not return true for the hidden property")
	assert(gethiddenproperty(fire, "size_xml") == 10, "Did not set the hidden property")
end)

test("gethui", {}, function()
	assert(typeof(gethui()) == "Instance", "Did not return an Instance")
end)

test("getinstances", {}, function()
	assert(getinstances()[1]:IsA("Instance"), "The first value is not an Instance")
end)

test("getnilinstances", {}, function()
	assert(getnilinstances()[1]:IsA("Instance"), "The first value is not an Instance")
	assert(getnilinstances()[1].Parent == nil, "The first value is not parented to nil")
end)

test("isscriptable", {}, function()
	local fire = Instance.new("Fire")
	assert(isscriptable(fire, "size_xml") == false, "Did not return false for a non-scriptable property (size_xml)")
	assert(isscriptable(fire, "Size") == true, "Did not return true for a scriptable property (Size)")
end)

test("setscriptable", {}, function()
	local fire = Instance.new("Fire")
	local wasScriptable = setscriptable(fire, "size_xml", true)
	assert(wasScriptable == false, "Did not return false for a non-scriptable property (size_xml)")
	assert(isscriptable(fire, "size_xml") == true, "Did not set the scriptable property")
	fire = Instance.new("Fire")
	assert(isscriptable(fire, "size_xml") == false, "⚠️⚠️ setscriptable persists between unique instances ⚠️⚠️")
end)

test("setrbxclipboard", {})

-- Metatable

test("getrawmetatable", {}, function()
	local metatable = { __metatable = "Locked!" }
	local object = setmetatable({}, metatable)
	assert(getrawmetatable(object) == metatable, "Did not return the metatable")
end)

test("hookmetamethod", {}, function()
	local object = setmetatable({}, { __index = newcclosure(function() return false end), __metatable = "Locked!" })
	local ref = hookmetamethod(object, "__index", function() return true end)
	assert(object.test == true, "Failed to hook a metamethod and change the return value")
	assert(ref() == false, "Did not return the original function")
end)

test("getnamecallmethod", {}, function()
	local method
	local ref
	ref = hookmetamethod(game, "__namecall", function(...)
		if not method then
			method = getnamecallmethod()
		end
		return ref(...)
	end)
	game:GetService("Lighting")
	assert(method == "GetService", "Did not get the correct method (GetService)")
end)

test("isreadonly", {}, function()
	local object = {}
	table.freeze(object)
	assert(isreadonly(object), "Did not return true for a read-only table")
end)

test("setrawmetatable", {}, function()
	local object = setmetatable({}, { __index = function() return false end, __metatable = "Locked!" })
	local objectReturned = setrawmetatable(object, { __index = function() return true end })
	assert(object, "Did not return the original object")
	assert(object.test == true, "Failed to change the metatable")
	if objectReturned then
		return objectReturned == object and "Returned the original object" or "Did not return the original object"
	end
end)

test("setreadonly", {}, function()
	local object = { success = false }
	table.freeze(object)
	setreadonly(object, false)
	object.success = true
	assert(object.success, "Did not allow the table to be modified")
end)

-- Miscellaneous

test("identifyexecutor", {"getexecutorname"}, function()
	local name, version = identifyexecutor()
	assert(type(name) == "string", "Did not return a string for the name")
	return type(version) == "string" and "Returns version as a string" or "Does not return version"
end)

test("lz4compress", {}, function()
	local raw = "Hello, world!"
	local compressed = lz4compress(raw)
	assert(type(compressed) == "string", "Compression did not return a string")
	assert(lz4decompress(compressed, #raw) == raw, "Decompression did not return the original string")
end)

test("lz4decompress", {}, function()
	local raw = "Hello, world!"
	local compressed = lz4compress(raw)
	assert(type(compressed) == "string", "Compression did not return a string")
	assert(lz4decompress(compressed, #raw) == raw, "Decompression did not return the original string")
end)

test("messagebox", {})

test("queue_on_teleport", {"queueonteleport"})

test("request", {"http.request", "http_request"}, function()
	local response = request({
		Url = "https://httpbin.org/user-agent",
		Method = "GET",
	})
	assert(type(response) == "table", "Response must be a table")
	assert(response.StatusCode == 200, "Did not return a 200 status code")
	local data = game:GetService("HttpService"):JSONDecode(response.Body)
	assert(type(data) == "table" and type(data["user-agent"]) == "string", "Did not return a table with a user-agent key")
	return "User-Agent: " .. data["user-agent"]
end)

test("setclipboard", {"toclipboard"})

test("setfpscap", {}, function()
	local renderStepped = game:GetService("RunService").RenderStepped
	local function step()
		renderStepped:Wait()
		local sum = 0
		for _ = 1, 5 do
			sum += 1 / renderStepped:Wait()
		end
		return math.round(sum / 5)
	end
	setfpscap(60)
	local step60 = step()
	setfpscap(0)
	local step0 = step()
	return step60 .. "fps @60 • " .. step0 .. "fps @0"
end)

-- Scripts

test("getgc", {}, function()
	local gc = getgc()
	assert(type(gc) == "table", "Did not return a table")
	assert(#gc > 0, "Did not return a table with any values")
end)

test("getgenv", {}, function()
	getgenv().__TEST_GLOBAL = true
	assert(__TEST_GLOBAL, "Failed to set a global variable")
	getgenv().__TEST_GLOBAL = nil
end)

test("getloadedmodules", {}, function()
	local modules = getloadedmodules()
	assert(type(modules) == "table", "Did not return a table")
	assert(#modules > 0, "Did not return a table with any values")
	assert(typeof(modules[1]) == "Instance", "First value is not an Instance")
	assert(modules[1]:IsA("ModuleScript"), "First value is not a ModuleScript")
end)

test("getrenv", {}, function()
	assert(_G ~= getrenv()._G, "The variable _G in the executor is identical to _G in the game")
end)

test("getrunningscripts", {}, function()
	local scripts = getrunningscripts()
	assert(type(scripts) == "table", "Did not return a table")
	assert(#scripts > 0, "Did not return a table with any values")
	assert(typeof(scripts[1]) == "Instance", "First value is not an Instance")
	assert(scripts[1]:IsA("ModuleScript") or scripts[1]:IsA("LocalScript"), "First value is not a ModuleScript or LocalScript")
end)

test("getscriptbytecode", {"dumpstring"}, function()
	local animate = game:GetService("Players").LocalPlayer.Character.Animate
	local bytecode = getscriptbytecode(animate)
	assert(type(bytecode) == "string", "Did not return a string for Character.Animate (a " .. animate.ClassName .. ")")
end)

test("getscripthash", {}, function()
	local animate = game:GetService("Players").LocalPlayer.Character.Animate:Clone()
	local hash = getscripthash(animate)
	local source = animate.Source
	animate.Source = "print('Hello, world!')"
	task.defer(function()
		animate.Source = source
	end)
	local newHash = getscripthash(animate)
	assert(hash ~= newHash, "Did not return a different hash for a modified script")
	assert(newHash == getscripthash(animate), "Did not return the same hash for a script with the same source")
end)

test("getscripts", {}, function()
	local scripts = getscripts()
	assert(type(scripts) == "table", "Did not return a table")
	assert(#scripts > 0, "Did not return a table with any values")
	assert(typeof(scripts[1]) == "Instance", "First value is not an Instance")
	assert(scripts[1]:IsA("ModuleScript") or scripts[1]:IsA("LocalScript"), "First value is not a ModuleScript or LocalScript")
end)

test("getsenv", {}, function()
	local animate = game:GetService("Players").LocalPlayer.Character.Animate
	local env = getsenv(animate)
	assert(type(env) == "table", "Did not return a table for Character.Animate (a " .. animate.ClassName .. ")")
	assert(env.script == animate, "The script global is not identical to Character.Animate")
end)

test("getthreadidentity", {"getidentity", "getthreadcontext"}, function()
	assert(type(getthreadidentity()) == "number", "Did not return a number")
end)

test("setthreadidentity", {"setidentity", "setthreadcontext"}, function()
	setthreadidentity(3)
	assert(getthreadidentity() == 3, "Did not set the thread identity")
end)

-- Drawing

test("Drawing", {})

test("Drawing.new", {}, function()
	local drawing = Drawing.new("Square")
	drawing.Visible = false
	local canDestroy = pcall(function()
		drawing:Destroy()
	end)
	assert(canDestroy, "Drawing:Destroy() should not throw an error")
end)

test("Drawing.Fonts", {}, function()
	assert(Drawing.Fonts.UI == 0, "Did not return the correct id for UI")
	assert(Drawing.Fonts.System == 1, "Did not return the correct id for System")
	assert(Drawing.Fonts.Plex == 2, "Did not return the correct id for Plex")
	assert(Drawing.Fonts.Monospace == 3, "Did not return the correct id for Monospace")
end)

test("isrenderobj", {}, function()
	local drawing = Drawing.new("Image")
	drawing.Visible = true
	assert(isrenderobj(drawing) == true, "Did not return true for an Image")
	assert(isrenderobj(newproxy()) == false, "Did not return false for a blank table")
end)

test("getrenderproperty", {}, function()
	local drawing = Drawing.new("Image")
	drawing.Visible = true
	assert(type(getrenderproperty(drawing, "Visible")) == "boolean", "Did not return a boolean value for Image.Visible")
	local success, result = pcall(function()
		return getrenderproperty(drawing, "Color")
	end)
	if not success or not result then
		return "Image.Color is not supported"
	end
end)

test("setrenderproperty", {}, function()
	local drawing = Drawing.new("Square")
	drawing.Visible = true
	setrenderproperty(drawing, "Visible", false)
	assert(drawing.Visible == false, "Did not set the value for Square.Visible")
end)

test("cleardrawcache", {}, function()
	cleardrawcache()
end)

-- WebSocket

test("WebSocket", {})

test("WebSocket.connect", {}, function()
	local types = {
		Send = "function",
		Close = "function",
		OnMessage = {"table", "userdata"},
		OnClose = {"table", "userdata"},
	}
	local ws = WebSocket.connect("ws://echo.websocket.events")
	assert(type(ws) == "table" or type(ws) == "userdata", "Did not return a table or userdata")
	for k, v in pairs(types) do
		if type(v) == "table" then
			assert(table.find(v, type(ws[k])), "Did not return a " .. table.concat(v, ", ") .. " for " .. k .. " (a " .. type(ws[k]) .. ")")
		else
			assert(type(ws[k]) == v, "Did not return a " .. v .. " for " .. k .. " (a " .. type(ws[k]) .. ")")
		end
	end
	ws:Close()
end)
end)

UICorner_29.Parent = prisonlifehub

UICorner_30.CornerRadius = UDim.new(0, 20)
UICorner_30.Parent = scriptsTab

console_2.Name = "console"
console_2.Parent = scriptsTab
console_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
console_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
console_2.BorderSizePixel = 0
console_2.Position = UDim2.new(0.0383561626, 0, 0.610000014, 0)
console_2.Size = UDim2.new(0, 56, 0, 56)
console_2.Image = "rbxassetid://10709798792"

UICorner_31.Parent = console_2

editor_2.Name = "editor"
editor_2.Parent = scriptsTab
editor_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
editor_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
editor_2.BorderSizePixel = 0
editor_2.Position = UDim2.new(0.0383561626, 0, 0.234999999, 0)
editor_2.Size = UDim2.new(0, 56, 0, 56)
editor_2.Image = "rbxassetid://7733920644"

UICorner_32.Parent = editor_2

settingsbtn_2.Name = "settingsbtn"
settingsbtn_2.Parent = scriptsTab
settingsbtn_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
settingsbtn_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
settingsbtn_2.BorderSizePixel = 0
settingsbtn_2.Position = UDim2.new(0.0383561626, 0, 0.787500024, 0)
settingsbtn_2.Size = UDim2.new(0, 56, 0, 56)
settingsbtn_2.Image = "rbxassetid://7734053495"

UICorner_33.Parent = settingsbtn_2

scripts_2.Name = "scripts"
scripts_2.Parent = scriptsTab
scripts_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
scripts_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
scripts_2.BorderSizePixel = 0
scripts_2.Position = UDim2.new(0.0383561626, 0, 0.425000012, 0)
scripts_2.Size = UDim2.new(0, 56, 0, 56)
scripts_2.Image = "rbxassetid://7733752575"

UICorner_34.Parent = scripts_2

settings.Name = "settings"
settings.Parent = Tx3Xploit
settings.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
settings.BorderSizePixel = 0
settings.Position = UDim2.new(0.182134211, 0, 0.169938385, 0)
settings.Size = UDim2.new(0, 730, 0, 400)
settings.Visible = false

UICorner_35.CornerRadius = UDim.new(0, 20)
UICorner_35.Parent = settings

closebtn_3.Name = "close btn"
closebtn_3.Parent = settings
closebtn_3.BackgroundColor3 = Color3.fromRGB(190, 0, 3)
closebtn_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
closebtn_3.BorderSizePixel = 0
closebtn_3.Position = UDim2.new(0.893315256, 0, 0.0203030389, 0)
closebtn_3.Size = UDim2.new(0, 58, 0, 43)
closebtn_3.ZIndex = 2
closebtn_3.Font = Enum.Font.FredokaOne
closebtn_3.Text = "X"
closebtn_3.TextColor3 = Color3.fromRGB(255, 255, 255)
closebtn_3.TextScaled = true
closebtn_3.TextSize = 14.000
closebtn_3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
closebtn_3.TextWrapped = true

UICorner_36.Parent = closebtn_3

fpscounter_3.Name = "fps counter"
fpscounter_3.Parent = settings
fpscounter_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
fpscounter_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
fpscounter_3.BorderSizePixel = 0
fpscounter_3.Position = UDim2.new(0.0162614789, 0, 0.026025543, 0)
fpscounter_3.Size = UDim2.new(0, 100, 0, 37)
fpscounter_3.ZIndex = 2
fpscounter_3.Font = Enum.Font.FredokaOne
fpscounter_3.Text = "fps:"
fpscounter_3.TextColor3 = Color3.fromRGB(255, 255, 255)
fpscounter_3.TextScaled = true
fpscounter_3.TextSize = 14.000
fpscounter_3.TextWrapped = true

Tx3Xploit_4.Name = "Tx3Xploit"
Tx3Xploit_4.Parent = settings
Tx3Xploit_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
Tx3Xploit_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tx3Xploit_4.BorderSizePixel = 0
Tx3Xploit_4.Position = UDim2.new(0.322144896, 0, 0.0136869429, 0)
Tx3Xploit_4.Size = UDim2.new(0, 245, 0, 50)
Tx3Xploit_4.ZIndex = 2
Tx3Xploit_4.Font = Enum.Font.FredokaOne
Tx3Xploit_4.Text = "Tx3Xploit"
Tx3Xploit_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Tx3Xploit_4.TextScaled = true
Tx3Xploit_4.TextSize = 14.000
Tx3Xploit_4.TextWrapped = true

lineaUP_3.Name = "lineaUP"
lineaUP_3.Parent = settings
lineaUP_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
lineaUP_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_3.BorderSizePixel = 0
lineaUP_3.Position = UDim2.new(-0.00118048675, 0, -0.00511718728, 0)
lineaUP_3.Size = UDim2.new(0, 730, 0, 62)
lineaUP_3.Font = Enum.Font.SourceSans
lineaUP_3.Text = ""
lineaUP_3.TextColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_3.TextSize = 14.000

UICorner_37.CornerRadius = UDim.new(0, 20)
UICorner_37.Parent = lineaUP_3

TextLabel_3.Parent = settings
TextLabel_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(0.0162614379, 0, 0.185000002, 0)
TextLabel_3.Size = UDim2.new(0, 89, 0, 303)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = ""
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextSize = 14.000

UICorner_38.Parent = TextLabel_3

TextLabel_4.Parent = settings
TextLabel_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(0.163013697, 0, 0.185000002, 0)
TextLabel_4.Size = UDim2.new(0, 580, 0, 303)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = ""
TextLabel_4.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.TextSize = 14.000

UICorner_39.Parent = TextLabel_4

walkspeed.Name = "walkspeed"
walkspeed.Parent = settings
walkspeed.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
walkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
walkspeed.BorderSizePixel = 0
walkspeed.Position = UDim2.new(0.187097579, 0, 0.239363939, 0)
walkspeed.Size = UDim2.new(0, 544, 0, 43)
walkspeed.Font = Enum.Font.FredokaOne
walkspeed.Text = "walkspeed"
walkspeed.TextColor3 = Color3.fromRGB(255, 255, 255)
walkspeed.TextScaled = true
walkspeed.TextSize = 14.000
walkspeed.TextWrapped = true

UICorner_40.Parent = walkspeed

Number.Name = "Number"
Number.Parent = settings
Number.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Number.BorderColor3 = Color3.fromRGB(0, 0, 0)
Number.BorderSizePixel = 0
Number.Position = UDim2.new(0.742465734, 0, 0.239363939, 0)
Number.Size = UDim2.new(0, 138, 0, 42)
Number.Font = Enum.Font.FredokaOne
Number.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Number.PlaceholderText = "Number..."
Number.Text = ""
Number.TextColor3 = Color3.fromRGB(255, 255, 255)
Number.TextScaled = true
Number.TextSize = 14.000
Number.TextWrapped = true

UICorner_41.Parent = Number

setws.Name = "setws"
setws.Parent = settings
setws.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
setws.BorderColor3 = Color3.fromRGB(0, 0, 0)
setws.BorderSizePixel = 0
setws.Position = UDim2.new(0.187097579, 0, 0.384363949, 0)
setws.Size = UDim2.new(0, 544, 0, 43)
setws.Font = Enum.Font.FredokaOne
setws.Text = " Set walkspeed"
setws.TextColor3 = Color3.fromRGB(255, 255, 255)
setws.TextScaled = true
setws.TextSize = 14.000
setws.TextWrapped = true

UICorner_42.Parent = setws

Rangelevel.Name = "Rangelevel"
Rangelevel.Parent = settings
Rangelevel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
Rangelevel.BorderColor3 = Color3.fromRGB(0, 0, 0)
Rangelevel.BorderSizePixel = 0
Rangelevel.Position = UDim2.new(0.17534247, 0, 0.832499981, 0)
Rangelevel.Size = UDim2.new(0, 100, 0, 37)
Rangelevel.Font = Enum.Font.FredokaOne
Rangelevel.Text = "Range: Member"
Rangelevel.TextColor3 = Color3.fromRGB(255, 255, 255)
Rangelevel.TextScaled = true
Rangelevel.TextSize = 14.000
Rangelevel.TextWrapped = true

console_3.Name = "console"
console_3.Parent = settings
console_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
console_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
console_3.BorderSizePixel = 0
console_3.Position = UDim2.new(0.0383561626, 0, 0.610000014, 0)
console_3.Size = UDim2.new(0, 56, 0, 56)
console_3.Image = "rbxassetid://10709798792"

UICorner_43.Parent = console_3

editor_3.Name = "editor"
editor_3.Parent = settings
editor_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
editor_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
editor_3.BorderSizePixel = 0
editor_3.Position = UDim2.new(0.0383561626, 0, 0.234999999, 0)
editor_3.Size = UDim2.new(0, 56, 0, 56)
editor_3.Image = "rbxassetid://7733920644"

UICorner_44.Parent = editor_3

scripts_3.Name = "scripts"
scripts_3.Parent = settings
scripts_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
scripts_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
scripts_3.BorderSizePixel = 0
scripts_3.Position = UDim2.new(0.0383561626, 0, 0.425000012, 0)
scripts_3.Size = UDim2.new(0, 56, 0, 56)
scripts_3.Image = "rbxassetid://7733752575"

UICorner_45.Parent = scripts_3

settingsbtn_3.Name = "settingsbtn"
settingsbtn_3.Parent = settings
settingsbtn_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
settingsbtn_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
settingsbtn_3.BorderSizePixel = 0
settingsbtn_3.Position = UDim2.new(0.0383561626, 0, 0.787500024, 0)
settingsbtn_3.Size = UDim2.new(0, 56, 0, 56)
settingsbtn_3.Image = "rbxassetid://7734053495"

UICorner_46.Parent = settingsbtn_3

consoleTab.Name = "consoleTab"
consoleTab.Parent = Tx3Xploit
consoleTab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
consoleTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
consoleTab.BorderSizePixel = 0
consoleTab.Position = UDim2.new(0.182134211, 0, 0.169938385, 0)
consoleTab.Size = UDim2.new(0, 730, 0, 400)
consoleTab.Visible = false

UICorner_47.CornerRadius = UDim.new(0, 20)
UICorner_47.Parent = consoleTab

closebtn_4.Name = "close btn"
closebtn_4.Parent = consoleTab
closebtn_4.BackgroundColor3 = Color3.fromRGB(190, 0, 3)
closebtn_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
closebtn_4.BorderSizePixel = 0
closebtn_4.Position = UDim2.new(0.893315256, 0, 0.0203030389, 0)
closebtn_4.Size = UDim2.new(0, 58, 0, 43)
closebtn_4.ZIndex = 2
closebtn_4.Font = Enum.Font.FredokaOne
closebtn_4.Text = "X"
closebtn_4.TextColor3 = Color3.fromRGB(255, 255, 255)
closebtn_4.TextScaled = true
closebtn_4.TextSize = 14.000
closebtn_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
closebtn_4.TextWrapped = true

UICorner_48.Parent = closebtn_4

fpscounter_4.Name = "fps counter"
fpscounter_4.Parent = consoleTab
fpscounter_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
fpscounter_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
fpscounter_4.BorderSizePixel = 0
fpscounter_4.Position = UDim2.new(0.0162614789, 0, 0.026025543, 0)
fpscounter_4.Size = UDim2.new(0, 100, 0, 37)
fpscounter_4.ZIndex = 2
fpscounter_4.Font = Enum.Font.FredokaOne
fpscounter_4.Text = "fps:"
fpscounter_4.TextColor3 = Color3.fromRGB(255, 255, 255)
fpscounter_4.TextScaled = true
fpscounter_4.TextSize = 14.000
fpscounter_4.TextWrapped = true

Tx3Xploit_5.Name = "Tx3Xploit"
Tx3Xploit_5.Parent = consoleTab
Tx3Xploit_5.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
Tx3Xploit_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tx3Xploit_5.BorderSizePixel = 0
Tx3Xploit_5.Position = UDim2.new(0.322144896, 0, 0.0136869429, 0)
Tx3Xploit_5.Size = UDim2.new(0, 245, 0, 50)
Tx3Xploit_5.ZIndex = 2
Tx3Xploit_5.Font = Enum.Font.FredokaOne
Tx3Xploit_5.Text = "Tx3Xploit"
Tx3Xploit_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Tx3Xploit_5.TextScaled = true
Tx3Xploit_5.TextSize = 14.000
Tx3Xploit_5.TextWrapped = true

lineaUP_4.Name = "lineaUP"
lineaUP_4.Parent = consoleTab
lineaUP_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
lineaUP_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_4.BorderSizePixel = 0
lineaUP_4.Position = UDim2.new(-0.00118048675, 0, -0.00511718728, 0)
lineaUP_4.Size = UDim2.new(0, 730, 0, 62)
lineaUP_4.Font = Enum.Font.SourceSans
lineaUP_4.Text = ""
lineaUP_4.TextColor3 = Color3.fromRGB(0, 0, 0)
lineaUP_4.TextSize = 14.000

UICorner_49.CornerRadius = UDim.new(0, 20)
UICorner_49.Parent = lineaUP_4

TextLabel_5.Parent = consoleTab
TextLabel_5.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.0162614379, 0, 0.185000002, 0)
TextLabel_5.Size = UDim2.new(0, 89, 0, 303)
TextLabel_5.Font = Enum.Font.SourceSans
TextLabel_5.Text = ""
TextLabel_5.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.TextSize = 14.000

UICorner_50.Parent = TextLabel_5

editor_4.Name = "editor"
editor_4.Parent = consoleTab
editor_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
editor_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
editor_4.BorderSizePixel = 0
editor_4.Position = UDim2.new(0.0383561626, 0, 0.234999999, 0)
editor_4.Size = UDim2.new(0, 56, 0, 56)
editor_4.Image = "rbxassetid://7733920644"

UICorner_51.Parent = editor_4

settingsbtn_4.Name = "settingsbtn"
settingsbtn_4.Parent = consoleTab
settingsbtn_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
settingsbtn_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
settingsbtn_4.BorderSizePixel = 0
settingsbtn_4.Position = UDim2.new(0.0383561626, 0, 0.787500024, 0)
settingsbtn_4.Size = UDim2.new(0, 56, 0, 56)
settingsbtn_4.Image = "rbxassetid://7734053495"

UICorner_52.Parent = settingsbtn_4

scripts_4.Name = "scripts"
scripts_4.Parent = consoleTab
scripts_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
scripts_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
scripts_4.BorderSizePixel = 0
scripts_4.Position = UDim2.new(0.0383561626, 0, 0.425000012, 0)
scripts_4.Size = UDim2.new(0, 56, 0, 56)
scripts_4.Image = "rbxassetid://7733752575"

UICorner_53.Parent = scripts_4

TextLabel_6.Parent = consoleTab
TextLabel_6.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.BorderSizePixel = 0
TextLabel_6.Position = UDim2.new(0.163013697, 0, 0.185000002, 0)
TextLabel_6.Size = UDim2.new(0, 580, 0, 303)
TextLabel_6.Font = Enum.Font.SourceSans
TextLabel_6.Text = ""
TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.TextSize = 14.000

UICorner_54.Parent = TextLabel_6

LogsText.Name = "LogsText"
LogsText.Parent = consoleTab
LogsText.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
LogsText.BorderColor3 = Color3.fromRGB(0, 0, 0)
LogsText.BorderSizePixel = 0
LogsText.Position = UDim2.new(0.176712334, 0, 0.215000004, 0)
LogsText.Size = UDim2.new(0, 559, 0, 225)
LogsText.ClearTextOnFocus = false
LogsText.Font = Enum.Font.FredokaOne
LogsText.TextEditable = false
LogsText.MultiLine = true
LogsText.PlaceholderText = ">>This is the console"
LogsText.Text = ""
LogsText.TextColor3 = Color3.fromRGB(255, 255, 255)
LogsText.TextSize = 40.000
LogsText.TextWrapped = true
LogsText.TextXAlignment = Enum.TextXAlignment.Left
LogsText.TextYAlignment = Enum.TextYAlignment.Top

UICorner_55.Parent = LogsText

ClearLogs.Name = "ClearLogs"
ClearLogs.Parent = consoleTab
ClearLogs.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
ClearLogs.BorderColor3 = Color3.fromRGB(0, 0, 0)
ClearLogs.BorderSizePixel = 0
ClearLogs.Position = UDim2.new(0.176712334, 0, 0.797451913, 0)
ClearLogs.Size = UDim2.new(0, 272, 0, 50)
ClearLogs.Font = Enum.Font.FredokaOne
ClearLogs.Text = "Clear Logs"
ClearLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearLogs.TextScaled = true
ClearLogs.TextSize = 14.000
ClearLogs.TextWrapped = true

UICorner_56.Parent = ClearLogs

CopyLogs.Name = "CopyLogs"
CopyLogs.Parent = consoleTab
CopyLogs.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
CopyLogs.BorderColor3 = Color3.fromRGB(0, 0, 0)
CopyLogs.BorderSizePixel = 0
CopyLogs.Position = UDim2.new(0.569863021, 0, 0.797451913, 0)
CopyLogs.Size = UDim2.new(0, 272, 0, 50)
CopyLogs.Font = Enum.Font.FredokaOne
CopyLogs.Text = "Copy Logs"
CopyLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyLogs.TextScaled = true
CopyLogs.TextSize = 14.000
CopyLogs.TextWrapped = true
local logTable = {}

UICorner_57.Parent = CopyLogs

console_4.Name = "console"
console_4.Parent = consoleTab
console_4.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
console_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
console_4.BorderSizePixel = 0
console_4.Position = UDim2.new(0.0383561626, 0, 0.610000014, 0)
console_4.Size = UDim2.new(0, 56, 0, 56)
console_4.Image = "rbxassetid://10709798792"

UICorner_58.Parent = console_4

-- Scripts:

local function ZWAPSKI_fake_script() -- fpscounter.LocalScript 
	local script = Instance.new('LocalScript', fpscounter)

	local textlabel = script.parent
	
	local function fpscounter()
		local fps = workspace:GetRealPhysicsFPS()
		textlabel.Text = string.format("fps: %.0f", fps)
	end
	
	while true do
		fpscounter()
		wait(1)
	end
end
coroutine.wrap(ZWAPSKI_fake_script)()
local function ZIPUSTK_fake_script() -- Tx3Xploit.opengui 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGui = script.Parent
	local Frame = SGui:WaitForChild("background")
	local Button = SGui:WaitForChild("open gui")
	
	Button.MouseButton1Click:Connect(function()
		Frame.Visible = true
		Button.Visible = false
	end)
end
coroutine.wrap(ZIPUSTK_fake_script)()
local function WSPBRMD_fake_script() -- Tx3Xploit.closegui 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local Frame = SGuiv2:WaitForChild("background")
	local Button = SGuiv2:WaitForChild("open gui")
	local closebtn = SGui:WaitForChild("close btn")
	
	closebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Button.Visible = true
	end)
end
coroutine.wrap(WSPBRMD_fake_script)()
local function LGKCL_fake_script() -- Tx3Xploit.scripttab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local Frame = SGuiv2:WaitForChild("background")
	local scriptsbtn = SGui:WaitForChild("scripts")
	local scriptTabs = SGuiv2:WaitForChild("scriptsTab")
	
	scriptsbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		scriptTabs.Visible = true
	end)
end
coroutine.wrap(LGKCL_fake_script)()
local function VPDWC_fake_script() -- Tx3Xploit.editorscripttab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local SGuiv3 = script.Parent.scriptsTab
	local Frame = SGuiv2:WaitForChild("background")
	local editorbtn = SGuiv3:WaitForChild("editor")
	local scriptTab = SGuiv2:WaitForChild("scriptsTab")
	
	editorbtn.MouseButton1Click:Connect(function()
		Frame.Visible = true
		scriptTab.Visible = false
	end)
end
coroutine.wrap(VPDWC_fake_script)()
local function TELMV_fake_script() -- Tx3Xploit.closeguitabscripts 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.scriptsTab
	local Frame = SGuiv2:WaitForChild("scriptsTab")
	local Button = SGuiv2:WaitForChild("open gui")
	local closebtn = SGui:WaitForChild("close btn")
	
	closebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Button.Visible = true
	end)
end
coroutine.wrap(TELMV_fake_script)()
local function TTFA_fake_script() -- fpscounter_2.LocalScript 
	local script = Instance.new('LocalScript', fpscounter_2)

	local textlabel = script.parent
	
	local function fpscounter()
		local fps = workspace:GetRealPhysicsFPS()
		textlabel.Text = string.format("fps: %.0f", fps)
	end
	
	while true do
		fpscounter()
		wait(1)
	end
end
coroutine.wrap(TTFA_fake_script)()
local function CUIJOX_fake_script() -- fpscounter_3.LocalScript 
	local script = Instance.new('LocalScript', fpscounter_3)

	local textlabel = script.parent
	
	local function fpscounter()
		local fps = workspace:GetRealPhysicsFPS()
		textlabel.Text = string.format("fps: %.0f", fps)
	end
	
	while true do
		fpscounter()
		wait(1)
	end
end
coroutine.wrap(CUIJOX_fake_script)()
local function RAJWZRN_fake_script() -- Number.LocalScript 
	local script = Instance.new('LocalScript', Number)

	local SGui = script.parent
	local Sguiv2 = script.parent.parent
	local setws = Sguiv2:WaitForChild("setws")
	
	setws.MouseButton1Click:Connect(function()
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = SGui.Text
	end)
end
coroutine.wrap(RAJWZRN_fake_script)()
local function CGGCCPM_fake_script() -- Tx3Xploit.closeguisettings 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.settings
	local Frame = SGuiv2:WaitForChild("settings")
	local Button = SGuiv2:WaitForChild("open gui")
	local closebtn = SGui:WaitForChild("close btn")
	
	closebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Button.Visible = true
	end)
end
coroutine.wrap(CGGCCPM_fake_script)()
local function PPBCCR_fake_script() -- Tx3Xploit.consoletabeditor 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local SGuiv3 = script.Parent.consoleTab
	local Frame = SGuiv2:WaitForChild("background")
	local editorbtn = SGuiv3:WaitForChild("editor")
	local consoletab = SGuiv2:WaitForChild("consoleTab")
	
	editorbtn.MouseButton1Click:Connect(function()
		Frame.Visible = true
		consoletab.Visible = false
	end)
end
coroutine.wrap(PPBCCR_fake_script)()
local function CTNNA_fake_script() -- Tx3Xploit.settingstab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local Frame = SGuiv2:WaitForChild("background")
	local settingsbtn = SGui:WaitForChild("settingsbtn")
	local settings = SGuiv2:WaitForChild("settings")
	
	settingsbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		settings.Visible = true
	end)
end
coroutine.wrap(CTNNA_fake_script)()
local function PNTMZYZ_fake_script() -- Tx3Xploit.scripttabssettings 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.scriptsTab
	local Frame = SGuiv2:WaitForChild("scriptsTab")
	local settingsbtn = SGui:WaitForChild("settingsbtn")
	local settings = SGuiv2:WaitForChild("settings")
	
	settingsbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		settings.Visible = true
	end)
end
coroutine.wrap(PNTMZYZ_fake_script)()
local function PAYPEZP_fake_script() -- Tx3Xploit.settingscripttab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.settings
	local Frame = SGuiv2:WaitForChild("settings")
	local settingsbtn = SGui:WaitForChild("scripts")
	local scriptab = SGuiv2:WaitForChild("scriptsTab")
	
	settingsbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		scriptab.Visible = true
	end)
end
coroutine.wrap(PAYPEZP_fake_script)()
local function TEPRBCY_fake_script() -- Tx3Xploit.tabconfig1 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGui = script.Parent.background.scrollingtab
	local SGuiv2 = script.Parent.background
	local Frame = SGuiv2:WaitForChild("exedbox")
	local Button = SGui:WaitForChild("Tab 1")
	local Frame2 = SGuiv2:WaitForChild("exedboxtab2")
	local Frame3 = SGuiv2:WaitForChild("exedboxtab3")
	
	
	Button.MouseButton1Click:Connect(function()
		Frame.Visible = true
		Frame2.Visible = false
		Frame3.Visible = false
	end)
end
coroutine.wrap(TEPRBCY_fake_script)()
local function QIMX_fake_script() -- Tx3Xploit.tabconfig2 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGui = script.Parent.background.scrollingtab
	local SGuiv2 = script.Parent.background
	local Frame = SGuiv2:WaitForChild("exedbox")
	local Button = SGui:WaitForChild("Tab 2")
	local Frame2 = SGuiv2:WaitForChild("exedboxtab2")
	local Frame3 = SGuiv2:WaitForChild("exedboxtab3")
	
	
	Button.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Frame2.Visible = true
		Frame3.Visible = false
	end)
end
coroutine.wrap(QIMX_fake_script)()
local function JBCEHI_fake_script() -- Tx3Xploit.tabconfig3 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGui = script.Parent.background.scrollingtab
	local SGuiv2 = script.Parent.background
	local Frame = SGuiv2:WaitForChild("exedbox")
	local Button = SGui:WaitForChild("Tab 3")
	local Frame2 = SGuiv2:WaitForChild("exedboxtab2")
	local Frame3 = SGuiv2:WaitForChild("exedboxtab3")
	
	
	Button.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Frame2.Visible = false
		Frame3.Visible = true
	end)
end
coroutine.wrap(JBCEHI_fake_script)()
local function PFIMODB_fake_script() -- fpscounter_4.LocalScript 
	local script = Instance.new('LocalScript', fpscounter_4)

	local textlabel = script.parent
	
	local function fpscounter()
		local fps = workspace:GetRealPhysicsFPS()
		textlabel.Text = string.format("fps: %.0f", fps)
	end
	
	while true do
		fpscounter()
		wait(1)
	end
end
coroutine.wrap(PFIMODB_fake_script)()
local function MWHIRRK_fake_script() -- Tx3Xploit.closeguiconsole 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.consoleTab
	local Frame = SGuiv2:WaitForChild("consoleTab")
	local Button = SGuiv2:WaitForChild("open gui")
	local closebtn = SGui:WaitForChild("close btn")
	
	closebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		Button.Visible = true
	end)
end
coroutine.wrap(MWHIRRK_fake_script)()
local function JDBEN_fake_script() -- Tx3Xploit.editorsetings 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local SGuiv3 = script.Parent.settings
	local Frame = SGuiv2:WaitForChild("background")
	local editorbtn = SGuiv3:WaitForChild("editor")
	local settings = SGuiv2:WaitForChild("settings")
	
	editorbtn.MouseButton1Click:Connect(function()
		Frame.Visible = true
		settings.Visible = false
	end)
end
coroutine.wrap(JDBEN_fake_script)()
local function XPJSQUN_fake_script() -- Tx3Xploit.consoletab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.background
	local Frame = SGuiv2:WaitForChild("background")
	local consolebtn = SGui:WaitForChild("console")
	local consoletab = SGuiv2:WaitForChild("consoleTab")
	
	consolebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		consoletab.Visible = true
	end)
end
coroutine.wrap(XPJSQUN_fake_script)()
local function EFMUTI_fake_script() -- Tx3Xploit.consoletabscriptstab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.consoleTab
	local Frame = SGuiv2:WaitForChild("consoleTab")
	local consolebtn = SGui:WaitForChild("scripts")
	local scriptab = SGuiv2:WaitForChild("scriptsTab")
	
	consolebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		scriptab.Visible = true
	end)
end
coroutine.wrap(EFMUTI_fake_script)()
local function FVVV_fake_script() -- Tx3Xploit.scriptstabconsole 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.scriptsTab
	local Frame = SGuiv2:WaitForChild("scriptsTab")
	local consolebtn = SGui:WaitForChild("console")
	local consoletab = SGuiv2:WaitForChild("consoleTab")
	
	consolebtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		consoletab.Visible = true
	end)
end
coroutine.wrap(FVVV_fake_script)()
local function YVCJFAM_fake_script() -- Tx3Xploit.settingsconsoletab 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.settings
	local Frame = SGuiv2:WaitForChild("settings")
	local settingsbtn = SGui:WaitForChild("console")
	local consoletab = SGuiv2:WaitForChild("consoleTab")
	
	settingsbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		consoletab.Visible = true
	end)
end
coroutine.wrap(YVCJFAM_fake_script)()
local function DAERHLP_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

	local SGuiv2 = script.Parent
	local SGui = script.Parent.settings
	local SGuiv3 = script.Parent.consoleTab
	local Frame = SGuiv2:WaitForChild("consoleTab")
	local editorbtn = SGuiv3:WaitForChild("settingsbtn")
	local settings = SGuiv2:WaitForChild("settings")
	
	editorbtn.MouseButton1Click:Connect(function()
		Frame.Visible = false
		settings.Visible = true
	end)
end
coroutine.wrap(DAERHLP_fake_script)()
local function ZXHMYA_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

	frame = script.Parent.background
	frame.Draggable = true
	frame.Selectable = true
	frame.Active = true
end
coroutine.wrap(ZXHMYA_fake_script)()
local function ZXHFYA_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

	frame = script.Parent.scriptsTab
	frame.Draggable = true
	frame.Selectable = true
	frame.Active = true
end
coroutine.wrap(ZXHFYA_fake_script)()
local function ZXHFOA_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

	frame = script.Parent.settings
	frame.Draggable = true
	frame.Selectable = true
	frame.Active = true
end
coroutine.wrap(ZXHFOA_fake_script)()
local function AXHFYA_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

	frame = script.Parent.consoleTab
	frame.Draggable = true
	frame.Selectable = true
	frame.Active = true
end
coroutine.wrap(AXHFYA_fake_script)()
local function AXMAYA_fake_script() -- Tx3Xploit.LocalScript 
	local script = Instance.new('LocalScript', Tx3Xploit)

local consoleTab = script.Parent:WaitForChild("consoleTab")
local settings = script.Parent:WaitForChild("settings")
local scriptsTab = script.Parent:WaitForChild("scriptsTab")
local background = script.Parent:WaitForChild("background")

local function ajustarPosiciones(frame)
    local framePosition = frame.Position
    consoleTab.Position = UDim2.new(framePosition.X.Scale, framePosition.X.Offset, framePosition.Y.Scale, framePosition.Y.Offset)
    settings.Position = UDim2.new(framePosition.X.Scale, framePosition.X.Offset, framePosition.Y.Scale, framePosition.Y.Offset)
    scriptsTab.Position = UDim2.new(framePosition.X.Scale, framePosition.X.Offset, framePosition.Y.Scale, framePosition.Y.Offset)
    background.Position = UDim2.new(framePosition.X.Scale, framePosition.X.Offset, framePosition.Y.Scale, framePosition.Y.Offset)
end

consoleTab:GetPropertyChangedSignal("Position"):Connect(function()
    ajustarPosiciones(consoleTab)
end)

settings:GetPropertyChangedSignal("Position"):Connect(function()
    ajustarPosiciones(settings)
end)

scriptsTab:GetPropertyChangedSignal("Position"):Connect(function()
    ajustarPosiciones(scriptsTab)
end)

background:GetPropertyChangedSignal("Position"):Connect(function()
    ajustarPosiciones(background)
end)
end
coroutine.wrap(AXMAYA_fake_script)()
game:GetService("LogService").MessageOut:Connect(
function(Message)
	repeat
		wait(.1)
	until Message
	logTable[#logTable + 1] = Message
	LogsText.Text = (table.concat(logTable, "\n"))
	for i, v in pairs(logTable) do
		if i == 5 then
			table.remove(logTable, 1)
		end
	end
end
)
ClearLogs.MouseButton1Click:Connect(
	function()
		table.remove(logTable, 4)
		table.remove(logTable, 3)
		table.remove(logTable, 2)
		table.remove(logTable, 1)
		table.remove(logTable)
		wait(.1)
		LogsText.Text = ""
	end
)
CopyLogs.MouseButton1Click:Connect(
	function()
		setclipboard(LogsText.Text)
	end
)
